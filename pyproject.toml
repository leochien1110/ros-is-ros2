[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ros-is-ros2"
version = "0.2.0"
description = "ROS 1-style CLI aliases for ROS 2, with working autocompletion."
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    { name = "ros-is-ros2 contributors" },
]
keywords = ["ros", "ros2", "robotics", "cli", "wrapper", "alias", "completion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Robotics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
ros-is-ros2 = "ros_is_ros2.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["ros_is_ros2"]

[tool.setuptools.package-data]
ros_is_ros2 = [
  "shims/*.sh",
  "third_party/complete_alias.bash"
]

[project.urls]
Homepage = "https://github.com/leo/ros-is-ros2"
"Bug Reports" = "https://github.com/leo/ros-is-ros2/issues"
"Source" = "https://github.com/leo/ros-is-ros2"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "Q"]
ignore = ["T201"]  # Allow print statements in CLI tools

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
